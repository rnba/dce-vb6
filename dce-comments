#!/usr/bin/sed -Esf
#
# filters out comments from a token stream
# produced by dce-lex.
#
# has these output formats:
#
# default: input as received with
#   - comments removed
#   - resulting trailing whitespace removed
#   - resulting empty lines removed
#   empty lines, whitespace-only lines, and
#   trailing whitespace that was on input
#   is left untouched.
#
# VB6 text (-e basic):
#   same as default, reduced back to source code
#
# compressed token stream (-e boiled)
#   same as default, plus
#   - whitespace tokens removed
#   - line continuations joined

b main

# routines ##################
:lexerr
s/^/dce-comments: bad input: /
w /dev/stderr
Q 1

:asic
# the leader is there and the trailer is empty.
# throw them away
s/^\x1e(.*)\x15$/\1/
# drop the rest added by dce-lex
s/\x1f//g
b

:oiled
# remove ws
/\x1f\s+/ s///g
# handle line continuations
:lcont
/\x1f_\x15/ {
  s///;
  $ {
    s/$/\x15\x03/; b
  }
  # can't use N here, that'd bypass
  # the comment-removing code this gets
  # input from
  H; d
}
H; g; x; z; x
s/^\n//
s/\n\x1e//g
b

:main

# dce-lex starts each line of output with 0x1e
# and puts unrecognizable text behind 0x15
/^\x1e/!  b lexerr
/\x15.+/  b lexerr
/\x15$/!  b lexerr

# comments get special treatment
/\x1f('.*|Rem\s.*|Rem)\x15/ {
  # drop it (it goes to the end-of-line)
  s//\x15/
  # drop whitespace that preceded it if any
  s/(\x1f\s+)+\x15/\x15/
  # it was all whitespace and comment?
  # eat the newline.
  /^\x1e\x15$/ d
}
